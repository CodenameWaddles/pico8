pico-8 cartridge // http://www.pico-8.com
version 36
__lua__
--dino dash (1.0)
--by codenamewaddles

-------initiating game parameters

--player constants
px = 64
py_default = 117
p_width = 16
p_height = 8
py = py_default
x_speed = 2
p_health = 1
p_invinc = 30
p_move = 4
green = nil
blue = {[11]=12,[3]=1}
red = {[11]=8,[3]=2,[10]=9}
orange = {[11]=9,[3]=4}
yellow = {[11]=10,[3]=9,[10]=9}
pink = {[11]=14,[3]=2,[10]=15}
white = {[11]=7,[3]=15,[10]=15}
selected_palette = green
--{[2]=3,[14]=11}

--meteor constants
trail_sprite_1 = 7
trail_sprite_2 = 8
ground_height = 120
m_width = 8
m_height = 8
m_initial_y = - 4

--explosions
meteor_exp_init = 0
meteor_exp_total = 6*8
meteor_exp_time = 3


--basic meteor
meteor_rate = 15

m_speed = 2
m_sprite = 23
m_y = -8
m_damage = 1
m_score = 2
meteor_rate_buffer = meteor_rate
m_trail_rate = 9

--special meteors
s_meteor_rate = 5 --1 of 5 meteors will be special

speed_m_speed = 3
s_m_sprite = 24
m_damage = 1
s_m_score = 5
s_meteor_rate_buffer = s_meteor_rate
s_m_trail_rate = 6

big_m_width = 16
big_m_height = 16
big_sprite_x = 13*8
big_sprite_y = 0

normal_meteor = "normal"
speed_meteor = "speed"
strafe_meteor = "strafe"
big_meteor = "big" --unused for now
available_types1 = {normal_meteor}
available_types2 = {normal_meteor, normal_meteor, normal_meteor, speed_meteor}
available_types3 = {normal_meteor, normal_meteor, speed_meteor}
available_types4 = {normal_meteor, normal_meteor, speed_meteor, strafe_meteor}
available_types5 = {normal_meteor, speed_meteor, strafe_meteor}
special_types = {speed_meteor, strafe_meteor, big_meteor}
all_types = {normal_meteor, speed_meteor, strafe_meteor}

--score thresholds
score_threshold_1 = 100
score_threshold_2 = 200
score_threshold_3 = 300
score_threshold_4 = 500
score_threshold_5 = 600
score_threshold_6 = 800
score_threshold_7 = 1000
score_threshold_8 = 1500

--shop
lock_sprite = 13

color_price = 5
triceratops_data_index = 10
skins = {"triceratops"}
skin_data = {0}
colors = {green, orange, yellow, red, pink, blue, white}
triceratops_color_prices = {0, 5, 5, 5, 5, 5, 5}

--coins
coin_y = py_default
coin_sprite = 27
coin_spin_time = 3
coin_spin_total = 3
coin_spawn_interval = 500

function _init()
    cartdata("waddles_dino_dash_highscore")

    get_data()

    title_init()
end

function get_data()
    highscore = dget(0)
    money = dget(1)
    get_dino_data(triceratops_data_index, triceratops_color_prices)
end

function save_data()
    dset(0, highscore)
    dset(1, money)
    set_dino_data(triceratops_data_index, triceratops_color_prices)
end

function reset_data()
    dset(0, 0)
    dset(1, 0)
end

function get_dino_data(index, dino_color_prices)
    data = dget(index)
    for i=1,#colors do
        if((data & 2^i) != 0) then
            dino_color_prices[i] = 0
        else
            dino_color_prices[i] = color_price
        end
    end
    if(index == triceratops_data_index) dino_color_prices[1] = 0 --ensures green triceratops is unlocked by default
end

function set_dino_data(index, dino_color_prices)
    data = 0
    for i=1,#colors do
        if(dino_color_prices[i] == 0) then --color is unlocked
            data += 2^i
        end
    end
    dset(index, data)
end

-------------------GAME-------------------
function game_init()
    --initiate meteors and player
    meteor_rate = 15
    meteors = {}
    meteor_exps = {}
    coins = {}
    player = make_player(px, py)
    
    available_types = available_types1
    meteor_previous_x = 0

    --init player score
    score = 0

    coin_spawn_buffer = 0

    _update = game_update
    _draw = game_draw

    update_threshold = update_threshold1

    music(0)
end

function game_update()
    update_player(player)

    update_meteors(meteors)

    update_explosions()

    --update_coins()

    update_threshold()
end

function game_draw()
    cls(0)
    map(0, 0, 0, 0, 16, 16)

    draw_meteors()

    draw_player(player)

    draw_explosions()

    --draw_coins()

    draw_ui()
end

function update_threshold1()
    if(flr(score/10)*10 >= score_threshold_1) meteor_rate = 13 update_threshold = update_threshold2 sfx(5)
end

function update_threshold2()
    if(flr(score/10)*10 >= score_threshold_2) meteor_rate = 12 available_types = available_types2 update_threshold = update_threshold3 sfx(5)
end

function update_threshold3()
    if(flr(score/10)*10 >= score_threshold_3) available_types = available_types3 update_threshold = update_threshold4 sfx(5)
end

function update_threshold4()
    if(flr(score/10)*10 >= score_threshold_4) meteor_rate = 11 update_threshold = update_threshold5 sfx(5)
end

function update_threshold5()
    if(flr(score/10)*10 >= score_threshold_5) meteor_rate = 10 available_types = available_types4 update_threshold = update_threshold6 sfx(5)
end

function update_threshold6()
    if(flr(score/10)*10 >= score_threshold_6) meteor_rate = 9  update_threshold = update_threshold7 sfx(5)
end

function update_threshold7()
    if(flr(score/10)*10 >= score_threshold_7) meteor_rate = 8 available_types = available_types5 update_threshold = update_threshold8 sfx(5)
end

function update_threshold8()
    if(flr(score/10)*10 >= score_threshold_8) update_threshold = function() end sfx(5) --coin_spawn_interval = 300
end




-----PLAYER-----
function make_player(x, y)
    --creates player object and attributes
    local player = {}
    player.x = x
    player.y = y
    player.vy = 0
    player.width = p_width
    player.height = p_height
    player.speed = x_speed
    player.health = p_health
    player.invinc_buffer = p_invinc
    player.invincible = false
    player.visible = true
    player.sprite_flip = false
    player.moving = false
    player.move_buffer = p_move
    player.move_frame1 = true
    player.palette = selected_palette
    return player
end

function update_player(player)
    --move
    move_player(player)

    --invincible when hit stuff
    player_invincible_anim(player)

    --deal with meteor collisions
    foreach(meteors, function(m)
        if(collision(player.x, player.y, player.width, player.height, m.x, m.y, m.width, m.height) and not player.invincible) player.invincible = true player.health -= m.damage sfx(3)
    end)

    --deal with coin collisions
    foreach(coins, function(c)
        if(collision(player.x, player.y, player.width, player.height, c.x, c.y, c.width, c.height)) del(coins, c) money += 1 sfx(6)
    end)

    --check death
    if(player.health <= 0) end_screen_init()

    --update movement animation
    if(player.moving) then
        if(player.move_buffer == 0) then
            player.move_buffer = p_move
        elseif(player.move_buffer == p_move/2) then
            player.move_frame1 = not(player.move_frame1)
            player.move_buffer -= 1
        else
            player.move_buffer -= 1
        end
    end
end

function move_player(player)
    --left and right movement
    if(btn(⬅️) and player.x - player.speed > 6) player.x -= player.speed player.sprite_flip = true player.moving = true
    if(btn(➡️) and player.x + player.speed < 121) player.x += player.speed player.sprite_flip = false player.moving = true
    if(btn(➡️) and btn(⬅️)) player.moving = false
    if(not(btn(⬅️)) and not(btn(➡️))) player.moving = false
end

function player_invincible_anim(player)
    --deals with triggering player visible or not while invincible
    if(player.invincible) then
        if(player.invinc_buffer % 5 == 0) player.visible = not(player.visible)
        if(player.invincible and (player.invinc_buffer > 0)) player.invinc_buffer -= 1
        if(player.invinc_buffer == 0) player.invincible = false player.invinc_buffer = p_invinc
    end
end

function draw_player(player)
    --draw player sprite if visible
    pal(player.palette)
    if(player.visible) then
        if(player.moving) then
            if(player.move_frame1) then
                sspr(8, 0, player.width, 16, player.x - (player.width/2), player.y - player.height - 5, player.width, 16, player.sprite_flip)
            else
                sspr(8, 0, player.width, 16, player.x - (player.width/2), player.y - player.height - 4, player.width, 16, player.sprite_flip)
            end
        else
            sspr(8, 0, player.width, 16, player.x - (player.width/2), player.y - player.height - 4, player.width, 16, player.sprite_flip)
        end
    end
    pal()
end




-----METEORS-----
function spawn_meteor(x, type)
    --creates meteor object and attributes
    local meteor = {}
    meteor.type = type

    --shared by all types
    meteor.x = x
    meteor.y = m_initial_y
    meteor.width = m_width
    meteor.height = m_height
    
    --attributes by type
    if(type == speed_meteor) then
        meteor.speed = speed_m_speed
        meteor.sprite = s_m_sprite
        meteor.damage = m_damage
        meteor.score = s_m_score
        meteor.trail_buffer = s_m_trail_rate
        meteor.trail1 = true
    elseif(type == strafe_meteor) then
        meteor.speed = m_speed
        meteor.sprite = s_m_sprite
        meteor.damage = m_damage
        meteor.score = s_m_score
        meteor.trail_buffer = s_m_trail_rate
        meteor.trail1 = true
    elseif(type == normal_meteor) then
        meteor.speed = m_speed
        meteor.damage = m_damage
        meteor.score = m_score
        meteor.trail_buffer = m_trail_rate
        meteor.trail1 = true
        meteor.sprite = m_sprite
    elseif(type == big_meteor) then
        meteor.speed = m_speed
        meteor.damage = m_damage
        meteor.score = m_score
        meteor.trail_buffer = m_trail_rate
        meteor.trail1 = true
        meteor.sprite = m_sprite
        meteor.width = big_m_width
        meteor.height = big_m_height
    end
    
    add(meteors, meteor)
end

function spawn_meteors()
    --spawn a meteor at random x if right frame
    if(meteor_rate_buffer == 0) then
        local x = flr(rnd(15))*8 + m_width/2
        while(x == meteor_previous_x or x == meteor_previous_x - 8 or x == meteor_previous_x + 8) do
            x = flr(rnd(15))*8 + m_width/2
        end
        meteor_previous_x = x
        spawn_meteor(x, rnd(available_types))
        meteor_rate_buffer = meteor_rate
    else
        meteor_rate_buffer -= 1
    end
end

function update_meteors(meteors)
    --spawn meteor
    spawn_meteors()

    --update meteors positions
    foreach(meteors, function(m)
        m.y += m.speed
        if(m.type == strafe_meteor) m.x = m.x + 1.5*cos(m.y/128)
        if(m.y >= ground_height) score += m.score spawn_meteor_explosion(m.x, m.type) del(meteors, m)
        m.trail_buffer -= 1
        if(m.trail_buffer == 0) m.trail_buffer = (m.special and m_trail_rate or s_m_trail_rate) m.trail1 = not(m.trail1)
    end)
end

function draw_meteors()
    --draw all meteor sprites
    foreach(meteors, function(m)
        if(m.type == big_meteor) then
            trail_sprite = m.trail1 and trail_sprite_1 or trail_sprite_2
            sspr(big_sprite_x, big_sprite_y, 8, 8, m.x - (m.width/2), m.y - (m.height/2), m.width, m.height)
            sspr(trail_sprite*8, 0, 8, 8, m.x - (m.width/2), m.y - m.height - 8, m.width, m.height)
        else
            trail_sprite = m.trail1 and trail_sprite_1 or trail_sprite_2
            spr(m.sprite, m.x - (m.width/2), m.y - (m.height/2))
            spr(trail_sprite, m.x - (m.width/2), m.y - m.height - 4)
        end
    end)
end




-----EXPLOSIONS-----
function spawn_meteor_explosion(x, type)
    local meteor_exp = {}
    meteor_exp.x = x
    meteor_exp.y = ground_height - 4
    meteor_exp.current = meteor_exp_init
    meteor_exp.meteor_exp_buffer = meteor_exp_time
    meteor_exp.type = type
    add(meteor_exps, meteor_exp)
end

function update_explosions()
    foreach(meteor_exps, function(m)
        if(m.meteor_exp_buffer == 0) then
            m.current += 16 m.meteor_exp_buffer = meteor_exp_time
        else
            m.meteor_exp_buffer -= 1
        end
        if(m.current > meteor_exp_init + meteor_exp_total) del(meteor_exps, m)
    end)
end

function draw_explosions()
    foreach(meteor_exps, function(m)
        if(m.type == speed_meteor or m.type == strafe_meteor) pal(5, 2)
        sspr(m.current, 24, 16, 8, m.x - 8, m.y - 4)
        pal()
    end)
end



-----MISC-----
function collision(x1, y1, w1, h1, x2, y2, w2, h2)
    --check collision between two objects
    local dx = x1 - x2
	local dy = y1 - y2
	if (abs(dx) < (w1 + w2)/2) then
		if (abs(dy) < (h1 + h2)/2) then
            return true
        end
    end
end

function draw_ui()
    print(flr(score/10)*10, 0, 1, 5)
    print(flr(score/10)*10, 0, 0, 7)
end




-----COINS-----
function make_coin(x)
    local coin = {}
    coin.x = x
    coin.y = coin_y
    coin.spin_frame = 0
    coin.spin_buffer = coin_spin_time
    coin.width = 4
    coin.height = 8
    add(coins, coin)
end

function update_coins()
    if((score%coin_spawn_interval < 10) and (score > 10) and (coin_spawn_buffer == 0)) sfx(1) spawn_coin() coin_spawn_buffer = 60
    if(coin_spawn_buffer > 0) coin_spawn_buffer -= 1
    foreach(coins, function(c)
        if(c.spin_buffer > 0) then
            c.spin_buffer -=1
        else
            c.spin_buffer = coin_spin_time
            c.spin_frame +=1
        end
        if(c.spin_frame > coin_spin_total) c.spin_frame = 0
    end)
end

function draw_coins()
    foreach(coins, function(c)
        spr(coin_sprite + c.spin_frame, c.x - c.width/2, c.y - c.height/2)
    end)
end

function spawn_coin()
    local x = flr(rnd(15))*8 + 4
    make_coin(64)
end





-------------------TITLE SCREEN--------------------

function title_init()
    --title screen variables
	title_scroll = true
	mx = 0
	my = 18
	height = 32
	width = 42
	scroll_speed = 2
	x0 = 64 - (width/2)
	y00 = 0 - height
	y10 = 0
	y01 = 128
	y11 = 128 + height

    title_map_x = 16
    title_map_y = 0

    start_flash = 18
    start_print = false
    start_flash_buffer = start_flash

    start_length = ((#"press x to start")*4)/2

    title_sound = false

    _update = title_update
    _draw = title_draw
end


function title_draw()
	cls()
    map(title_map_x, title_map_y, 0, 0, 16, 16)
	if(y00 == y01) title_scroll = false
	for i=0,width do
		tline(x0+(2*i), y00, x0+(2*i), y10, mx+((2*i)/8), my, 0, 1/8)
		tline(x0+(2*i+1), y01, x0+(2*i+1), y11, mx+((2*i+1)/8), my, 0, 1/8)
	end
	if(title_scroll) y00+=scroll_speed y10+=scroll_speed y01-=scroll_speed y11-=scroll_speed
    if(not(title_scroll)) print("by codenamewaddles", 64 - ((#"by codenamewaddles"*4)/2), 90, 5)
    if(not(title_scroll) and start_print) print("press x to start", 64 - start_length, 101, 5) print("press x to start", 64 - start_length, 100, 7)
end

function title_update()
    if(not(title_scroll) and not(title_sound)) title_sound = true music(18)
    if(not(title_scroll) and btn(5)) title_transition_init()
    --if(not(title_scroll) and btn(4)) shop_init()
    if(start_flash_buffer != 0) then 
        start_flash_buffer -= 1
    else
        start_print = not(start_print)
        start_flash_buffer = start_flash
    end
end





-------------------TRANSITION SCREEN--------------------

function title_transition_init()
    sfx(4)
    transition_speed = 3

    --separation = y coordinate of the split between both map parts
    separation = 127

    _update = title_transition_update
    _draw = title_transition_draw
end

function title_transition_update()
    separation -= transition_speed
    if(separation <= 0) game_init()
end

function title_transition_draw()
    cls()
    --draw top map
    map(title_map_x, title_map_y, 0, -127 + separation, 16, 16)

    --draw bottom map
    map(0, 0, 0, separation, 16, 16)
end






-------------------END SCREEN--------------------

function end_screen_init()

    score = flr(score/10)*10
    --replace highscore if necessary
    new_highscore = false
    if(highscore < score) new_highscore = true highscore = score highscore_flash = 20 highscore_print = true highscore_flash_buffer = highscore_flash

    save_data()

    game_over_length = ((#"game over")*4)/2
    score_half_length = ((#tostr(score) + 5)*4 + 3)/2
    restart_length = ((#"press x to restart")*4)/2
    highscore_length = (((#"highscore " + #tostr(highscore))*4))/2

    end_time_buffer = 0

    if(new_highscore) then
        end_time = 180
    else
        end_time = 120
    end

    game_over_time = 30
    score_time = 60
    restart_time = 80
    highscore_time = 100

    print_restart = true
    print_restart_time = 18
    print_restart_buffer = print_restart_time

    _update = end_screen_update
    _draw = end_screen_draw

    end_music = false
    music(-1)
end

function end_screen_update()
    if(new_highscore and highscore_flash_buffer == 0) then
        highscore_print = not(highscore_print)
        highscore_flash_buffer = highscore_flash
    elseif(new_highscore and end_time_buffer < end_time) then
        highscore_flash_buffer -= 1
    end
    if(btn(5) and end_time_buffer == end_time) game_init()
    --if(btn(4) and end_time_buffer == end_time) shop_init()
    if(end_time_buffer == end_time) highscore_print = true
    if(end_time_buffer < end_time) end_time_buffer += 1
    if(end_time_buffer == game_over_time) sfx(0)
    if(end_time_buffer == score_time or end_time_buffer == restart_time) sfx(1)
    if(end_time_buffer == highscore_time and new_highscore) sfx(2)
    if(end_time_buffer == highscore_time and not(new_highscore)) sfx(1)
    if(end_time_buffer == end_time and print_restart_buffer > 0) print_restart_buffer -=1
    if(end_time_buffer == end_time and print_restart_buffer == 0) print_restart_buffer = print_restart_time print_restart = not(print_restart)
    if(end_time_buffer == end_time and not(end_music)) music(16) end_music = true
end

function end_screen_draw()
    cls()
    map(0, 0, 0, 0, 16, 16)
    if(end_time_buffer > game_over_time) print("game over", 64 - game_over_length, 31, 5) print("game over", 64 - game_over_length, 30, 7)
    if(new_highscore and highscore_print and end_time_buffer > highscore_time) print("new highscore!", 36, 51, 5) print("new highscore!", 36, 50, 7)
    if(not(new_highscore) and end_time_buffer > highscore_time) print("highscore "..highscore, 64 - highscore_length, 51, 5) print("highscore "..highscore, 64 - highscore_length, 50, 7)
    if(end_time_buffer > score_time) print("score".." "..score, 64 - score_half_length, 61, 5) print("score".." "..score, 64 - score_half_length, 60, 7)
    if(end_time_buffer > restart_time and print_restart) print("press x to restart", 64 - restart_length, 91, 5) print("press x to restart", 64 - restart_length, 90, 7)
end





-----CUSTOMIZATION SCREEN-----

function shop_init()

    color_prices = triceratops_color_prices

    current_color = 1

    player = make_player(64, 64)

    _update = shop_update
    _draw = shop_draw

    music(-1)
end

function shop_update()
    shop_update_palette()
    shop_buy_or_select()
    if(btnp(5)) title_init()
end

function shop_buy_or_select()
    if(btnp(4) and color_prices[current_color] == 0) selected_palette = colors[current_color] sfx(1)
    if(btnp(4) and color_prices[current_color] != 0 and money >= color_prices[current_color]) money -= color_prices[current_color] color_prices[current_color] = 0 selected_palette = colors[current_color] save_data() sfx(5)
end

function shop_update_palette()
    if(btnp(2)) current_color += 1
    if(btnp(3)) current_color -= 1
    if(current_color > #colors) current_color = 1
    if(current_color < 1) current_color = #colors
    player.palette = colors[current_color]
end

function shop_draw()
    cls()
    shop_draw_player(player)
    if(color_prices[current_color] != 0) sspr((lock_sprite)*8, 0, 8, 8, 60, 45, 8, 8)
    draw_money()
end

function draw_money()
    print(money, 0, 2, 5) print(money, 0, 1, 7)
    spr(coin_sprite, #tostr(money)*4 + 1, 0)
end

function shop_draw_player(player)
    pal(player.palette)
    sspr(8, 0, player.width, 16, player.x - (player.width), player.y - player.height - 8, 32, 32, player.sprite_flip)
    pal()
end


__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000665555000000000000900900000000660000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000900000077655555550000000009009000000006005000000000000000000
00700700000000000000000000000000000000000000000000000000000090000090900000766655515555000009009090000000006005000000000000000000
000770000000000005000000000000000bbbbb0000000000000000000000909000909090066665551565555000900999909000000aaa99900000000000000000
00077000000000000b00000000000000b71bbbb0000000000000000009099900000990900666555556556550000999aa900000000a9999900000000000000000
00700700000000005b50000000000000bbbbbbb000000000000000000909a9090009a900666555555555555500099aa900900000099999900000000000000000
0000000000000000bbbb006000000000bbb0000000000b0030b00000009aa9099099a90065555551155555550099aaa999000000099999400000000000000000
00000000000000005bb506600b00000bbbbbbb0000000bb33bb03000909aa909909aa9095555551556555551009aaa9990000000099994400000000000000000
0000000000000000bbbb66000b0000bbbaa0000000030bbbbbb3300009765590094422905565551556555551009aaa000009a00000099000000a900000000000
000000000000bb335bb71b060bb00bbbbba330000b033bbbbbbbbbb0066555500aa224905555555665555511099999a000999a0000499a0000a9990000000000
0000000000bbbbb33bbbbbb603b0bbbbabbb00000bb3bbbbbbbbb71b665555554499922255555555555555119994499a0999999000499a000999999000000000
000000000bbbbbbb35bbbbbb00bbbbbaaa00000033bbbbbbbbbbbbbb5555555522292222055555555555511099499a990994a99000499a00099a499000000000
00000000bbbbbbbb33bbbb00003bbbbaa3000000bbbbbbbbbbbbbbbb5555555122929221055555155555111099499a990994a99000499a00099a499000000000
0000000000bbbaabb33000000003bbb3330000000000bbaaaabbbb0055555511224299110055555555511100499aa9990999999000499a000999999000000000
00000000000bb00bb000000000000bb0330000000000bb0000bb000005555110022221100005555551111000049999900049990000499a000099940000000000
00000000000b500b5000000000000bb5335000000000b50000b50000005551000022210000000551111000000044490000049000000990000009400000000000
6666666ddddddaaa99dddddd6666dddd0000000000000000000000000000000000000000dddddddddddddaaa99000000000000060000000000000aaa99000000
a996666da9449999999aa9dd6aa9ddaa0000070000000000000000000000000000000000a99ddddda9449999999aa9000aa900aaa9900000a9449999999aa900
999966daa994999999999994aa99949900000000000000000007000000000000000000009999dddaa994999999999994aa9994999999000aa994999999999994
99999449999999999949999499999499000000000000000000000000070000000000000099999449999999999949999499999499999994499999999999499994
99999444999999449944994499994499000000000007000000000000000000000000000099999444999999449944994499994499999994449999994499449944
99999444499994449944444999994999000000000000000000000000000000000000000099999444499994449944444999994999999994444999944499444449
99994444444444999444444999994999000000000000000000000000000000000000070099994444444444999444444999994999999944444444449994444449
99444444444449999444444499944444000000000000000000000000000000000000000099444444444449999444444499944444994444444444499994444444
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000055005500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000050550000000000550055550000005500000000550000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000555550000000000050000000000055000000005555000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000055550000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000555555000000000005005500000000000000000000005500000000000000000000000000000000000000000000000000000000000000000000000000000
00000050505000000000055500550000000005000550000055000500055005500000000000000000000000000000000000000000000000000000000000000000
00000000000000000000005000050000000055500055000005005550005555550000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000002121112211000000000000000000000000000000000000000000000000000
0000000000000003333333333333ccccc00000000000000000000000000000022214221122211111100000000000000000000000000000000000000000000000
000000000000033333333333333cccccccc000000000000000000000000002222124222212221111111000000000000000000000000000000000000000000000
000000000003333333333333333cccccccccc0000000000000000000000222222229222222221211111114400000000000000000000000000000000000000000
000000000033333333333331133ccccccccccc000000000000000000002222221229222111122111119944400000000000000000000000000000000000000000
000000000333333333331111111cccccccccccc00000000000000000022222222222911112112112999111100000000000000000000000000000000000000000
00000003333333331131116661ccccccccccccc11000000000000002222211222222911229999994491111111000000000000000000000000000000000000000
00000033333333116611166111cccccddccccccc1100000000000012222222222211919999442999411111111100000000000000000000000000000000000000
0000006333333166611167776cccccddcccccccc1100000000000022222122222122499499122222991111111100000000000000000000000000000000000000
0000077773311677616777777cccc77dcccccccc1160000000000222212221122222944992112222291111111110000000000000000000000000000000000000
00007777631667777777777776c7776cccccccc1c16d000000002221222211222222944992112222229111111111000000000000000000000000000000000000
0007777633177777777766676cc776cc66c3333c1c6dd00000011222222221222222949922112222221911111111100000000000000000000000000000000000
00077776777777777776ccccccccccc66333333316ddd00000022111222222222222499221122212211411111111100000000000000000000000000000000000
00d7777777677777777666cccccccc66733333333ddddd0000211112222222222229222211122222211141111111110000000000000000000000000000000000
00c777777767777777776cccccccc77733333333355ddd0000221122222222222299221111222222211224111111110000000000000000000000000000000000
0ccc6667777666c6777ccccccccc33333333333335ddddd002222222222222222992212222222222211199111111111000000000000000000000000000000000
0ccccccccc66ccc6666ccccccccc33333333333366ddddd002222222222222449222222222222222211199111111111000000000000000000000000000000000
0ccccc3366cccccc6666ccccccccc33333333116ddddddd002222222224994422222222222222222221119911111111000000000000000000000000000000000
0cccc3335cccccccccccccccccccc33333333331ddddddd004222292994222121222222222222222221111911111111000000000000000000000000000000000
ccccc5356766ccccccccc7ccccccc3333333336ddddddd1122249999422221222122222112222221121211449911111100000000000000000000000000000000
cccccc56777ccccccccc6cccccccc33333313666dddd111122222224922222222112222222222222111111441144991100000000000000000000000000000000
ccccccd6ccccccccccc76ccccccc6c3313311dddd555111122212222292222222212222222222211211119911111114100000000000000000000000000000000
ccccccd6ccccccccccccccc66cc6ccc3311111ddc555111122222112229222222111222222222122111119911111111400000000000000000000000000000000
ccccccc66ccccccccccccc6cccc66ccc3111155ddc11111121222221122922222111222222222221111199491111111100000000000000000000000000000000
cccccccc77ccccccccc6cc677ccc76ccc33155555c11111111122222222942222211222222222211121994441111111100000000000000000000000000000000
ccccc7cccccccccccc6cc67776c777ccc31155555111111111212222229441212211222221142212111991411111111100000000000000000000000000000000
ccccd776cc666cccc6c67777777776cccc1555555c11111111112222224922111112222222124111199491111111111100000000000000000000000000000000
ccccd777667ccccc67677777777776ccccc1555c1111111111121222299222211112222222221499994491111111111100000000000000000000000000000000
cccccd77777766c67777777777777ddcccccccc1c111111111111122999222222222222222229994919991111111111100000000000000000000000000000000
0cccccd777d7777777777777d77ddddccccccc1cd111111001111219229922222222222222229449111994111111111000000000000000000000000000000000
0ccccccdddd7767777777d7ddddddddccccc1c1dd111111001111192222294922222222222219449111194111111111000000000000000000000000000000000
0cccccccdcdddd777777dccddddddd1cccc1cddddd11111001111191222229299449222221199491111119999111111000000000000000000000000000000000
0ccccccccc355ddd77ddddcccdddd1111d1dddddddd1111001111111122292222299922111994491111111119911111000000000000000000000000000000000
00ccccccc5115cddddddddccc1111111d1dddddddd11110000111111122911111294922219444999111111111191110000000000000000000000000000000000
00cccccccc55ccddddccddcc1111111d1dddddddd111110000111111119911111999499999444999111111111111110000000000000000000000000000000000
000cccccccccdddccccccccc1111555dddddddd11111100000011111194491229119499444494449111111111114100000000000000000000000000000000000
000ccccccccccdddcccccccc11155d51ddddd1111111100000011111994444991111944994449444911111111114100000000000000000000000000000000000
0000ccccccccccddddc111cc1115d15ddddddddd1111000000001111199991114114111999999444991111111111400000000000000000000000000000000000
00000ccccccccccccc11111c1115dddddddddd111110000000000111119111111441111199999949499111111110000000000000000000000000000000000000
0000001c1cccccccc1111111111ddddddddddd111100000000000011119111111111111111111199991111111100000000000000000000000000000000000000
00000011c1c1c1c111115551111dddddddddd1111100000000000011141111111111111111111111991111111100000000000000000000000000000000000000
000000011c1c11111115151111115ddddd1111111000000000000001141111111111111111111111119111111000000000000000000000000000000000000000
00000000011111111151515111111111111111100000000000000000411111111111111111111111111911100000000000000000000000000000000000000000
00000000001111111111515111111111111111000000000000000000001111111111111111111111114111000000000000000000000000000000000000000000
00000000000111111111111111111111111110000000000000000000000111111111111111111111114110000000000000000000000000000000000000000000
00000000000001111111111111111111111000000000000000000000000001111111111111111111111000000000000000000000000000000000000000000000
00000000000000011111111111111111100000000000000000000000000000011111111111111111100000000000000000000000000000000000000000000000
00000000000000000001111111111000000000000000000000000000000000000001111111111000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000077d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000070000000000000000000776dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000077d00000000000000000776dddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000776dd0000000000070006666ddddd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000006666ddd00000000077d06666ddddddd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000006666ddddd0000000666dd6666dddddddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000066666dddddd000006666d6666dddddddddd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000066666dddddddd0006666666666ddddddddddd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000666666ddddddddd06666666666ddddddddddddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000666666ddddddddddd6666666666dddddddddddddd000000000000000000000000000000000000000000000000000000000000000000000000000000000000
006666666dddddddddddd66666666dddddddddddddddd00000000000000000000000000000000000000000000000000000000000000000000000000000000000
06666666dddddddddddddd6666666ddddddddddddddddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666ddddddddddddddd66666ddddddddddddddddddd000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000077777770000077777777007700007700000777700000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000077777777000077777777007770007700007777770000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000077111117700011177111007770007700077111177000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000077111111770011177111007777007700771111117700000000000000000000000000000
00000000000000000000000000000000000000000000000000000000077000001770000077000007777007700771000017700000000000000000000000000000
00000000000000000000000000000000000000000000000000000000077000000770000077000007717707700770000007700000000000000000000000000000
00000000000000000000000000000000000000000000000000000000077000000770000077000007717707700770000007700000000000000000000000000000
00000000000000000000000000000000000000000000000000000000077000000770000077000007701777700770000007700000000000000000000000000000
00000000000000000000000000000000000000000000000000000000077000007710000077000007701777700177000077100000000000000000000000000000
00000000000000000000000000000000000000000000000000000000077777777110077777777007700177700117777771100000000000000000000000000000
00000000000000000000000000000000000000000000000000000000077777771100077777777007700177700011777711000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000011111111000011111111001100011100001111110000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000011111110000011111111001100011100000111100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000007777777000000077770000077777700770000770000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000007777777700000777777000777777700770000770000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000007711111770000771177000771111100770000770000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000007711111177007711117700771111100770000770000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000007700000177007710017700777777000777777770000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000007700000077007700007700177777700777777770000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000007700000077007777777700111117700771111770000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000007700000077007777777700011117700771111770000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000007700000771007711117700000007700770000770000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000007777777711007711117700777777700770000770000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000007777777110007700007700777777100770000770000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000001111111100001100001100111111100110000110000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000001111111000001100001100111111000110000110000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000260000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0026000000250000002500000000000000000027000000000028000000000000260000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000090a000000000000000000000000000000000000002500464748494a4b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000191a000000000000000000002600000000000000000000565758595a5b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000260000002400000000000000240000000000666768696a6b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000002700000000000000002800000000000000000000767778797a7b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000002700000000000000868788898a8b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00260000002600002700000000000000000000000000000000969798999a9b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2800000000000000000000000025000000000000250000000000000000000000280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000002500000000280000260000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000002500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000280000000000000000000000002400002600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a0a1a2a3a4a50026a0a1a2a3a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b0b1b2b3b4b50000b0b1b2b3b4b5000000002400000000280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2021222329212b2c20212223292a2b2c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c7c8c9cacbcc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d7d8d9dadbdc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e7e8e9eaebec0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
f7f8f9fafbfc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000300002663022630206201b6201661015610116100d6100b6100761005610036100061002600026000260001600016000160501600016000160001600000000000000000000000000000000000000000000000
000100001603016030160301603016030160301603016030160301603025100251002610026100261002610026100261002610026100251002510025100251002510025100251000000000000000000000000000
000800002203022130220002203022130220002303023140000002404024140240302412024010241102700027000270000000000000000000000000000000000000000000000000000000000000000000000000
000300002e3322b33128332263312333221331203321d3311b3221a3211932217321153221332112322103210e3120c3110b31209311073120631104312033110231201311013120031100300003000030000300
000400002474526745297452e7453074532745357453a7452400526005290052e0053000532005350053a00500000000000000000000000000000000000000000000000000000000000000000000000000000000
000600002203022130220002203022130220002303023140230302312023010240002410024000241002700027000270000000000000000000000000000000000000000000000000000000000000000000000000
0001000023050230502305023050230502305023050000002b0502b0502b0502b0502b0502b0502b0502b05000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011000000c13300100001001d00024615001001d000350000c13300100001001d00024615001001d0001d0000c13300100001001d000246151d0001d0001d0000c13300100001001d00024615000000000000000
011000000c13300100001001d02324615001001d023350000c13300100001001d02324615001001d0231d0000c13311000001001d023246151d0001d0231d0000c13300100001001d02324615000000000000000
011000000c0551005500005000051305500005000050000511055100550c05500005000050000500005000050c055100550000500005150550000500005000051305511055100550000500005000050000500005
011000000c0551005500005000051305500005000050000511055100550c05500005000050000500005000050c055100550000515055130550000513055000051305511055100550000500005000050000500005
01100000180551a0550000500005210550000500005000051f0551d0551c0550000500005000050000500005180551a055000050000523055000050000500005210551f0551d0550000500005000050000500005
01100000180551a0550000500005210550000500005000051f0551d0551c0550000500005000050000500005180551a0550000523055210550000521055000051f0551d0551c0550000500005000050000500005
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011000001f0350000500005000051c035000051a03500005180350000500005000051a0350000500005000051c0350000500005000051d035000051c0351d0351c03500005180350000500005000050000500005
011000001f0350000000000000001d035000051c0351d0351c0350000500005000051a0350000500005000051c0350000500005000051d035000051c0351d0351c03500005180350000500005000050000500000
111000001f0540000400004000041c054000041a05400004180540000400004000041a0540000400004000041c0540000400004000041d054000041c0541d0541c05400004180540000400004000040000400004
111000001f0340000400004000041d034000041c0341d0341c0340000400004000041a0340000400004000041c0340000400004000041d034000041c0341d0341c03400004180340000400004000040000400004
__music__
01 090b4344
00 090c4d44
00 0a0b4d44
00 0a0c4d44
00 0a0b0d44
00 0a0c0e44
00 0a0b0d44
00 0a0c0e44
00 0a0b4d44
02 0a0c4d44
00 41424344
00 41424344
00 41404344
00 41404344
00 41404344
00 41404344
01 16404344
02 17404344
01 14554344
02 15404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344
00 41404344

